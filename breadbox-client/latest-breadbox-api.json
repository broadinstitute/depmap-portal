{
  "components": {
    "schemas": {
      "AccessType": {
        "enum": [
          "read",
          "write",
          "owner"
        ],
        "title": "AccessType",
        "type": "string"
      },
      "AddDatasetResponse": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "percentComplete": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentcomplete"
          },
          "result": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "state": {
            "title": "State",
            "type": "string"
          }
        },
        "required": [
          "state",
          "id"
        ],
        "title": "AddDatasetResponse",
        "type": "object"
      },
      "AddDimensionType": {
        "properties": {
          "axis": {
            "enum": [
              "feature",
              "sample"
            ],
            "title": "Axis",
            "type": "string"
          },
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "id_column",
          "axis"
        ],
        "title": "AddDimensionType",
        "type": "object"
      },
      "AnnotationType": {
        "enum": [
          "continuous",
          "categorical",
          "binary",
          "text",
          "list_strings"
        ],
        "title": "AnnotationType",
        "type": "string"
      },
      "AnnotationTypeMap": {
        "properties": {
          "annotation_type_mapping": {
            "additionalProperties": {
              "$ref": "#/components/schemas/AnnotationType"
            },
            "title": "Annotation Type Mapping",
            "type": "object"
          }
        },
        "required": [
          "annotation_type_mapping"
        ],
        "title": "AnnotationTypeMap",
        "type": "object"
      },
      "Body_add_data_type": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "Body_add_data_type",
        "type": "object"
      },
      "Body_add_dataset": {
        "properties": {
          "data_file": {
            "description": "CSV file of your dataset with feature ids as columns and sample ids as rows.",
            "format": "binary",
            "title": "Data File",
            "type": "string"
          },
          "data_type": {
            "description": "Data type grouping for your dataset",
            "title": "Data Type",
            "type": "string"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/DatasetMetadata"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Contains a dictionary of additional dataset values that are not already provided above.",
            "title": "Dataset Metadata"
          },
          "feature_type": {
            "description": "Type of features your dataset contains",
            "title": "Feature Type",
            "type": "string"
          },
          "group_id": {
            "description": "ID of the group the dataset belongs to. Required for non-transient datasets. The public group is `00000000-0000-0000-0000-000000000000`.",
            "format": "uuid",
            "title": "Group Id",
            "type": "string"
          },
          "is_transient": {
            "description": "Transient datasets can be deleted - should only be set to true for non-public short-term-use datasets like custom analysis results.",
            "title": "Is Transient",
            "type": "boolean"
          },
          "name": {
            "description": "Name of dataset, used for display",
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "description": "Numeric value assigned to the dataset with `1` being highest priority within the `data_type`, used for displaying order of datasets to show for a specific `data_type` in UI.",
            "title": "Priority",
            "type": "integer"
          },
          "sample_type": {
            "description": "Type of samples your dataset contains",
            "title": "Sample Type",
            "type": "string"
          },
          "taiga_id": {
            "description": "Taiga ID the dataset is sourced from.",
            "title": "Taiga Id",
            "type": "string"
          },
          "units": {
            "description": "Units for the values in the dataset, used for display",
            "title": "Units",
            "type": "string"
          },
          "value_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ValueType"
              }
            ],
            "description": "Value 'continuous' if dataset contains numerical values or 'categorical' if dataset contains string categories as values."
          }
        },
        "required": [
          "name",
          "units",
          "data_type",
          "data_file",
          "is_transient",
          "sample_type",
          "value_type"
        ],
        "title": "Body_add_dataset",
        "type": "object"
      },
      "Body_add_feature_type": {
        "properties": {
          "annotation_type_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/AnnotationTypeMap"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Type Mapping"
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "id_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/IdMappingInsanity"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A mapping of dataset column names to the feature type name those columns reference.",
            "title": "Id Mapping"
          },
          "metadata_file": {
            "anyOf": [
              {
                "format": "binary",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata File"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "properties_to_index": {
            "description": "A list of columns by name to add to the dimension search index.",
            "items": {
              "type": "string"
            },
            "title": "Properties To Index",
            "type": "array"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taiga Id"
          }
        },
        "required": [
          "name",
          "id_column"
        ],
        "title": "Body_add_feature_type",
        "type": "object"
      },
      "Body_add_sample_type": {
        "properties": {
          "annotation_type_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/AnnotationTypeMap"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Type Mapping"
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "id_mapping": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/IdMapping"
              },
              {
                "type": "null"
              }
            ],
            "description": "A mapping of dataset column names to the feature type name those columns reference."
          },
          "metadata_file": {
            "format": "binary",
            "title": "Metadata File",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "properties_to_index": {
            "description": "A list of columns by name to add to the dimension search index.",
            "items": {
              "type": "string"
            },
            "title": "Properties To Index",
            "type": "array"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taiga Id"
          }
        },
        "required": [
          "name",
          "id_column"
        ],
        "title": "Body_add_sample_type",
        "type": "object"
      },
      "Body_get_dataset_data": {
        "properties": {
          "feature_identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeatureSampleIdentifier"
              },
              {
                "type": "null"
              }
            ],
            "description": "Denotes whether the list of features are given as ids or feature labels"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "list of feature labels or ids for which data should be retrieved",
            "title": "Features"
          },
          "sample_identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeatureSampleIdentifier"
              },
              {
                "type": "null"
              }
            ],
            "description": "Denotes whether the list of samples are given as ids or sample labels"
          },
          "samples": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "list of sample labels or ids for which data should be retrieved",
            "title": "Samples"
          }
        },
        "title": "Body_get_dataset_data",
        "type": "object"
      },
      "Body_get_dimension_data": {
        "properties": {
          "dataset_id": {
            "description": "The UUID or given ID of a dataset.",
            "title": "Dataset Id",
            "type": "string"
          },
          "identifier": {
            "description": "A dimension identifier of the specified type (id, label, etc.).",
            "title": "Identifier",
            "type": "string"
          },
          "identifier_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SliceQueryIdentifierType"
              }
            ],
            "description": "Denotes the type of identifier being used and the axis being queried."
          }
        },
        "required": [
          "dataset_id",
          "identifier",
          "identifier_type"
        ],
        "title": "Body_get_dimension_data",
        "type": "object"
      },
      "Body_update_feature_type_metadata": {
        "properties": {
          "annotation_type_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/AnnotationTypeMap"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Type Mapping"
          },
          "id_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/IdMappingInsanity"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A mapping of dataset column names to the feature type name those columns reference.",
            "title": "Id Mapping"
          },
          "metadata_file": {
            "format": "binary",
            "title": "Metadata File",
            "type": "string"
          },
          "properties_to_index": {
            "description": "A list of columns by name to add to the dimension search index.",
            "items": {
              "type": "string"
            },
            "title": "Properties To Index",
            "type": "array"
          },
          "taiga_id": {
            "title": "Taiga Id",
            "type": "string"
          }
        },
        "required": [
          "metadata_file"
        ],
        "title": "Body_update_feature_type_metadata",
        "type": "object"
      },
      "Body_update_sample_type_metadata": {
        "properties": {
          "annotation_type_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/AnnotationTypeMap"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Annotation Type Mapping"
          },
          "id_mapping": {
            "anyOf": [
              {
                "contentMediaType": "application/json",
                "contentSchema": {
                  "$ref": "#/components/schemas/IdMappingInsanity"
                },
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "A mapping of dataset column names to the feature type name those columns reference.",
            "title": "Id Mapping"
          },
          "metadata_file": {
            "format": "binary",
            "title": "Metadata File",
            "type": "string"
          },
          "properties_to_index": {
            "description": "A list of columns by name to add to the dimension search index.",
            "items": {
              "type": "string"
            },
            "title": "Properties To Index",
            "type": "array"
          },
          "taiga_id": {
            "title": "Taiga Id",
            "type": "string"
          }
        },
        "required": [
          "metadata_file"
        ],
        "title": "Body_update_sample_type_metadata",
        "type": "object"
      },
      "Body_upload_file": {
        "properties": {
          "file": {
            "format": "binary",
            "title": "File",
            "type": "string"
          }
        },
        "required": [
          "file"
        ],
        "title": "Body_upload_file",
        "type": "object"
      },
      "ColumnMetadata": {
        "properties": {
          "col_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/AnnotationType"
              }
            ],
            "description": "Annotation type for the column. Annotation types may include: `continuous`, `categorical`, `binary`, `text`, or `list_strings`."
          },
          "references": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "If specified, the value in this column is interpreted as an IDs in the named dimension type.",
            "title": "References"
          },
          "units": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Units for the values in the column, used for display",
            "title": "Units"
          }
        },
        "required": [
          "col_type"
        ],
        "title": "ColumnMetadata",
        "type": "object"
      },
      "ComputeParams": {
        "properties": {
          "analysisType": {
            "title": "Analysistype",
            "type": "string"
          },
          "datasetId": {
            "title": "Datasetid",
            "type": "string"
          },
          "queryCellLines": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Querycelllines"
          },
          "queryDatasetId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Querydatasetid"
          },
          "queryFeatureId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queryfeatureid"
          },
          "queryId": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queryid"
          },
          "queryValues": {
            "anyOf": [
              {
                "items": {},
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Queryvalues"
          },
          "vectorVariableType": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Vectorvariabletype"
          }
        },
        "required": [
          "analysisType",
          "datasetId"
        ],
        "title": "ComputeParams",
        "type": "object"
      },
      "ComputeResponse": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "percentComplete": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentcomplete"
          },
          "result": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "state": {
            "title": "State",
            "type": "string"
          }
        },
        "required": [
          "state",
          "id",
          "message",
          "result",
          "percentComplete"
        ],
        "title": "ComputeResponse",
        "type": "object"
      },
      "Context": {
        "properties": {
          "dimension_type": {
            "title": "Dimension Type",
            "type": "string"
          },
          "expr": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "additionalProperties": {
                  "items": {},
                  "type": "array"
                },
                "type": "object"
              }
            ],
            "title": "Expr"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Name"
          },
          "vars": {
            "additionalProperties": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "default": {},
            "title": "Vars",
            "type": "object"
          }
        },
        "required": [
          "expr",
          "dimension_type"
        ],
        "title": "Context",
        "type": "object"
      },
      "ContextMatchResponse": {
        "properties": {
          "ids": {
            "items": {
              "type": "string"
            },
            "title": "Ids",
            "type": "array"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "title": "Labels",
            "type": "array"
          },
          "num_candidates": {
            "title": "Num Candidates",
            "type": "integer"
          }
        },
        "required": [
          "ids",
          "labels",
          "num_candidates"
        ],
        "title": "ContextMatchResponse",
        "type": "object"
      },
      "DataType": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "DataType",
        "type": "object"
      },
      "DatasetMetadata": {
        "properties": {
          "dataset_metadata": {
            "title": "Dataset Metadata",
            "type": "object"
          }
        },
        "required": [
          "dataset_metadata"
        ],
        "title": "DatasetMetadata",
        "type": "object"
      },
      "DimensionDataResponse": {
        "properties": {
          "ids": {
            "items": {
              "type": "string"
            },
            "title": "Ids",
            "type": "array"
          },
          "labels": {
            "items": {
              "type": "string"
            },
            "title": "Labels",
            "type": "array"
          },
          "values": {
            "items": {},
            "title": "Values",
            "type": "array"
          }
        },
        "required": [
          "ids",
          "labels",
          "values"
        ],
        "title": "DimensionDataResponse",
        "type": "object"
      },
      "DimensionSearchIndexResponse": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "matching_properties": {
            "items": {
              "additionalProperties": {
                "type": "string"
              },
              "type": "object"
            },
            "title": "Matching Properties",
            "type": "array"
          },
          "referenced_by": {
            "anyOf": [
              {
                "items": {
                  "$ref": "#/components/schemas/NameAndID"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Referenced By"
          },
          "type_name": {
            "title": "Type Name",
            "type": "string"
          }
        },
        "required": [
          "type_name",
          "id",
          "label",
          "matching_properties",
          "referenced_by"
        ],
        "title": "DimensionSearchIndexResponse",
        "type": "object"
      },
      "DimensionType": {
        "properties": {
          "axis": {
            "enum": [
              "feature",
              "sample"
            ],
            "title": "Axis",
            "type": "string"
          },
          "display_name": {
            "title": "Display Name",
            "type": "string"
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "metadata_dataset_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Dataset Id"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "properties_to_index": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties To Index"
          }
        },
        "required": [
          "name",
          "display_name",
          "id_column",
          "axis"
        ],
        "title": "DimensionType",
        "type": "object"
      },
      "ExportDatasetParams": {
        "properties": {
          "addCellLineMetadata": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Addcelllinemetadata"
          },
          "cellLineIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Celllineids"
          },
          "datasetId": {
            "title": "Datasetid",
            "type": "string"
          },
          "dropEmpty": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Dropempty"
          },
          "featureLabels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Featurelabels"
          }
        },
        "required": [
          "datasetId"
        ],
        "title": "ExportDatasetParams",
        "type": "object"
      },
      "ExportDatasetResponse": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "message": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Message"
          },
          "percentComplete": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Percentcomplete"
          },
          "result": {
            "anyOf": [
              {},
              {
                "type": "null"
              }
            ],
            "title": "Result"
          },
          "state": {
            "title": "State",
            "type": "string"
          }
        },
        "required": [
          "state",
          "id"
        ],
        "title": "ExportDatasetResponse",
        "type": "object"
      },
      "ExportMergedDatasetParams": {
        "properties": {
          "addCellLineMetadata": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Addcelllinemetadata"
          },
          "cellLineIds": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Celllineids"
          },
          "datasetIds": {
            "items": {
              "type": "string"
            },
            "title": "Datasetids",
            "type": "array"
          },
          "dropEmpty": {
            "anyOf": [
              {
                "type": "boolean"
              },
              {
                "type": "null"
              }
            ],
            "default": false,
            "title": "Dropempty"
          },
          "featureLabels": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Featurelabels"
          }
        },
        "required": [
          "datasetIds"
        ],
        "title": "ExportMergedDatasetParams",
        "type": "object"
      },
      "FeatureResponse": {
        "properties": {
          "dataset_id": {
            "title": "Dataset Id",
            "type": "string"
          },
          "dataset_label": {
            "title": "Dataset Label",
            "type": "string"
          },
          "feature_id": {
            "title": "Feature Id",
            "type": "string"
          },
          "label": {
            "title": "Label",
            "type": "string"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "values": {
            "title": "Values",
            "type": "object"
          }
        },
        "required": [
          "feature_id",
          "dataset_id",
          "values",
          "label",
          "units",
          "dataset_label"
        ],
        "title": "FeatureResponse",
        "type": "object"
      },
      "FeatureSampleIdentifier": {
        "enum": [
          "id",
          "label"
        ],
        "title": "FeatureSampleIdentifier",
        "type": "string"
      },
      "FeatureTypeOut": {
        "properties": {
          "dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TabularDatasetResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "id_column"
        ],
        "title": "FeatureTypeOut",
        "type": "object"
      },
      "FeatureValidationQuery": {
        "properties": {
          "featureLabels": {
            "items": {
              "type": "string"
            },
            "title": "Featurelabels",
            "type": "array"
          }
        },
        "required": [
          "featureLabels"
        ],
        "title": "FeatureValidationQuery",
        "type": "object"
      },
      "FormattedMetadata": {
        "properties": {
          "annotation_type": {
            "title": "Annotation Type",
            "type": "string"
          },
          "given_id": {
            "title": "Given Id",
            "type": "string"
          },
          "value": {
            "title": "Value"
          }
        },
        "required": [
          "given_id",
          "value",
          "annotation_type"
        ],
        "title": "FormattedMetadata",
        "type": "object"
      },
      "Group": {
        "properties": {
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name"
        ],
        "title": "Group",
        "type": "object"
      },
      "GroupEntry": {
        "properties": {
          "access_type": {
            "$ref": "#/components/schemas/AccessType"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "exact_match": {
            "default": true,
            "title": "Exact Match",
            "type": "boolean"
          },
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          }
        },
        "required": [
          "id",
          "email",
          "access_type"
        ],
        "title": "GroupEntry",
        "type": "object"
      },
      "GroupEntryIn": {
        "properties": {
          "access_type": {
            "$ref": "#/components/schemas/AccessType"
          },
          "email": {
            "title": "Email",
            "type": "string"
          },
          "exact_match": {
            "default": true,
            "title": "Exact Match",
            "type": "boolean"
          }
        },
        "required": [
          "email",
          "access_type"
        ],
        "title": "GroupEntryIn",
        "type": "object"
      },
      "GroupIn": {
        "properties": {
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name"
        ],
        "title": "GroupIn",
        "type": "object"
      },
      "GroupOut": {
        "properties": {
          "datasets": {
            "anyOf": [
              {
                "items": {
                  "discriminator": {
                    "mapping": {
                      "matrix_dataset": "#/components/schemas/MatrixDatasetResponse",
                      "tabular_dataset": "#/components/schemas/TabularDatasetResponse"
                    },
                    "propertyName": "format"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MatrixDatasetResponse"
                    },
                    {
                      "$ref": "#/components/schemas/TabularDatasetResponse"
                    }
                  ]
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Datasets"
          },
          "group_entries": {
            "items": {
              "$ref": "#/components/schemas/GroupEntry"
            },
            "title": "Group Entries",
            "type": "array"
          },
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "group_entries"
        ],
        "title": "GroupOut",
        "type": "object"
      },
      "HTTPError": {
        "example": {
          "detail": "HTTPException raised."
        },
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "string"
          }
        },
        "required": [
          "detail"
        ],
        "title": "HTTPError",
        "type": "object"
      },
      "HTTPValidationError": {
        "properties": {
          "detail": {
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            },
            "title": "Detail",
            "type": "array"
          }
        },
        "title": "HTTPValidationError",
        "type": "object"
      },
      "IdMapping": {
        "properties": {
          "reference_column_mappings": {
            "additionalProperties": {
              "type": "string"
            },
            "title": "Reference Column Mappings",
            "type": "object"
          }
        },
        "required": [
          "reference_column_mappings"
        ],
        "title": "IdMapping",
        "type": "object"
      },
      "IdMappingInsanity": {
        "description": "This class exists for copying with some oddities in how the id_mapping parameter is encoded in json. There\nprobably would be some better refactoring that would make this all much clearer, however, we've moved away\nfrom this encoding and plan to delete the endpoints that use this so I'm putting in this hack to keep things\nworking until we pull the bandaid off and delete all the depreciated endpoints.",
        "properties": {
          "id_mapping": {
            "$ref": "#/components/schemas/IdMapping"
          }
        },
        "required": [
          "id_mapping"
        ],
        "title": "IdMappingInsanity",
        "type": "object"
      },
      "MatrixDatasetParams": {
        "properties": {
          "allowed_values": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Only provide if 'value_type' is 'categorical'. Must contain all possible categorical values",
            "title": "Allowed Values"
          },
          "data_file_format": {
            "default": "csv",
            "description": "The format of the uploaded data file. May either be 'csv' or 'parquet'",
            "enum": [
              "csv",
              "parquet"
            ],
            "title": "Data File Format",
            "type": "string"
          },
          "data_type": {
            "description": "Data type grouping for your dataset",
            "title": "Data Type",
            "type": "string"
          },
          "dataset_md5": {
            "description": "MD5 hash for entire dataset file",
            "maxLength": 32,
            "minLength": 32,
            "title": "Dataset Md5",
            "type": "string"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Contains a dictionary of additional dataset values that are not already provided above.",
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "feature_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Type of features your dataset contains",
            "title": "Feature Type"
          },
          "file_ids": {
            "description": "Ordered list of file ids from the chunked dataset uploads",
            "items": {
              "type": "string"
            },
            "title": "File Ids",
            "type": "array"
          },
          "format": {
            "const": "matrix",
            "enum": [
              "matrix"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Stable human-readable identifier that the portal uses to look up specific datasets.",
            "title": "Given Id"
          },
          "group_id": {
            "description": "ID of the group the dataset belongs to. Required for non-transient datasets. The public group is `00000000-0000-0000-0000-000000000000`",
            "format": "uuid",
            "title": "Group Id",
            "type": "string"
          },
          "is_transient": {
            "default": false,
            "description": "Transient datasets can be deleted - should only be set to true for non-public short-term-use datasets like custom analysis results.",
            "title": "Is Transient",
            "type": "boolean"
          },
          "name": {
            "description": "Name of dataset",
            "minLength": 1,
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Numeric value assigned to the dataset with `1` being highest priority within the `data_type`, used for displaying order of datasets to show for a specific `data_type` in UI.",
            "title": "Priority"
          },
          "sample_type": {
            "description": "Type of samples your dataset contains",
            "title": "Sample Type",
            "type": "string"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Taiga ID the dataset is sourced from.",
            "title": "Taiga Id"
          },
          "units": {
            "description": "Units for the values in the dataset, used for display",
            "title": "Units",
            "type": "string"
          },
          "value_type": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ValueType"
              }
            ],
            "description": "Value 'continuous' if dataset contains numerical values or 'categorical' if dataset contains string categories as values."
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "name",
          "file_ids",
          "dataset_md5",
          "data_type",
          "group_id",
          "format",
          "units",
          "sample_type",
          "value_type"
        ],
        "title": "MatrixDatasetParams",
        "type": "object"
      },
      "MatrixDatasetResponse": {
        "properties": {
          "allowed_values": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Allowed Values"
          },
          "data_type": {
            "title": "Data Type",
            "type": "string"
          },
          "dataset_md5": {
            "anyOf": [
              {
                "maxLength": 32,
                "minLength": 32,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Md5"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "feature_type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Feature Type Name"
          },
          "format": {
            "const": "matrix_dataset",
            "default": "matrix_dataset",
            "enum": [
              "matrix_dataset"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Id"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "group_id": {
            "title": "Group Id",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "is_transient": {
            "default": false,
            "title": "Is Transient",
            "type": "boolean"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "sample_type_name": {
            "title": "Sample Type Name",
            "type": "string"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taiga Id"
          },
          "units": {
            "title": "Units",
            "type": "string"
          },
          "value_type": {
            "$ref": "#/components/schemas/ValueType"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "id",
          "name",
          "data_type",
          "group_id",
          "dataset_metadata",
          "sample_type_name",
          "units",
          "value_type",
          "feature_type_name",
          "allowed_values",
          "group"
        ],
        "title": "MatrixDatasetResponse",
        "type": "object"
      },
      "MatrixDatasetUpdateParams": {
        "description": "Matrix dataset parameters that are editable",
        "properties": {
          "data_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Data type grouping for your dataset",
            "title": "Data Type"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "A dictionary of additional dataset metadata that is not already provided",
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "format": {
            "const": "matrix",
            "enum": [
              "matrix"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The 'given ID' for this dataset",
            "title": "Given Id"
          },
          "group_id": {
            "anyOf": [
              {
                "format": "uuid",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Id of the group the dataset belongs to",
            "title": "Group Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Name of dataset",
            "title": "Name"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Numeric value representing priority of the dataset within its `data_type`",
            "title": "Priority"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "units": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Units for the values in the dataset",
            "title": "Units"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "format"
        ],
        "title": "MatrixDatasetUpdateParams",
        "type": "object"
      },
      "MatrixDimensionsInfo": {
        "properties": {
          "feature_identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeatureSampleIdentifier"
              },
              {
                "type": "null"
              }
            ],
            "description": "Denotes whether the list of features are given as ids or feature labels"
          },
          "features": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "List of feature labels or ids for which data should be retrieved",
            "title": "Features"
          },
          "sample_identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeatureSampleIdentifier"
              },
              {
                "type": "null"
              }
            ],
            "description": "Denotes whether the list of samples are given as ids or sample labels"
          },
          "samples": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "List of sample labels or ids for which data should be retrieved",
            "title": "Samples"
          }
        },
        "title": "MatrixDimensionsInfo",
        "type": "object"
      },
      "MetadataResponse": {
        "properties": {
          "label": {
            "title": "Label",
            "type": "string"
          },
          "metadata": {
            "items": {
              "$ref": "#/components/schemas/FormattedMetadata"
            },
            "title": "Metadata",
            "type": "array"
          }
        },
        "required": [
          "label",
          "metadata"
        ],
        "title": "MetadataResponse",
        "type": "object"
      },
      "NameAndID": {
        "properties": {
          "id": {
            "title": "Id",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "id"
        ],
        "title": "NameAndID",
        "type": "object"
      },
      "SampleTypeOut": {
        "properties": {
          "dataset": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/TabularDatasetResponse"
              },
              {
                "type": "null"
              }
            ]
          },
          "id_column": {
            "title": "Id Column",
            "type": "string"
          },
          "name": {
            "title": "Name",
            "type": "string"
          }
        },
        "required": [
          "name",
          "id_column"
        ],
        "title": "SampleTypeOut",
        "type": "object"
      },
      "SearchResponse": {
        "properties": {
          "labels": {
            "items": {
              "type": "string"
            },
            "title": "Labels",
            "type": "array"
          }
        },
        "required": [
          "labels"
        ],
        "title": "SearchResponse",
        "type": "object"
      },
      "SliceQueryIdentifierType": {
        "enum": [
          "feature_id",
          "feature_label",
          "sample_id",
          "sample_label",
          "column"
        ],
        "title": "SliceQueryIdentifierType",
        "type": "string"
      },
      "TableDatasetParams": {
        "properties": {
          "columns_metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ColumnMetadata"
            },
            "description": "Dictionary containing info about each column in the table dataset format.",
            "title": "Columns Metadata",
            "type": "object"
          },
          "data_type": {
            "description": "Data type grouping for your dataset",
            "title": "Data Type",
            "type": "string"
          },
          "dataset_md5": {
            "description": "MD5 hash for entire dataset file",
            "maxLength": 32,
            "minLength": 32,
            "title": "Dataset Md5",
            "type": "string"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "Contains a dictionary of additional dataset values that are not already provided above.",
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "file_ids": {
            "description": "Ordered list of file ids from the chunked dataset uploads",
            "items": {
              "type": "string"
            },
            "title": "File Ids",
            "type": "array"
          },
          "format": {
            "const": "tabular",
            "enum": [
              "tabular"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Stable human-readable identifier that the portal uses to look up specific datasets.",
            "title": "Given Id"
          },
          "group_id": {
            "description": "ID of the group the dataset belongs to. Required for non-transient datasets. The public group is `00000000-0000-0000-0000-000000000000`",
            "format": "uuid",
            "title": "Group Id",
            "type": "string"
          },
          "index_type": {
            "description": "Feature type or sample type name that is used as index in the table dataset format. Used to validate the identifier of the dimension type is included in the dataset.",
            "title": "Index Type",
            "type": "string"
          },
          "is_transient": {
            "default": false,
            "description": "Transient datasets can be deleted - should only be set to true for non-public short-term-use datasets like custom analysis results.",
            "title": "Is Transient",
            "type": "boolean"
          },
          "name": {
            "description": "Name of dataset",
            "minLength": 1,
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Numeric value assigned to the dataset with `1` being highest priority within the `data_type`, used for displaying order of datasets to show for a specific `data_type` in UI.",
            "title": "Priority"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Taiga ID the dataset is sourced from.",
            "title": "Taiga Id"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "name",
          "file_ids",
          "dataset_md5",
          "data_type",
          "group_id",
          "format",
          "index_type",
          "columns_metadata"
        ],
        "title": "TableDatasetParams",
        "type": "object"
      },
      "TabularDatasetResponse": {
        "properties": {
          "columns_metadata": {
            "additionalProperties": {
              "$ref": "#/components/schemas/ColumnMetadata"
            },
            "description": "Dictionary containing info about each column in the table dataset format.",
            "title": "Columns Metadata",
            "type": "object"
          },
          "data_type": {
            "title": "Data Type",
            "type": "string"
          },
          "dataset_md5": {
            "anyOf": [
              {
                "maxLength": 32,
                "minLength": 32,
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Md5"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "format": {
            "const": "tabular_dataset",
            "default": "tabular_dataset",
            "enum": [
              "tabular_dataset"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Given Id"
          },
          "group": {
            "$ref": "#/components/schemas/Group"
          },
          "group_id": {
            "title": "Group Id",
            "type": "string"
          },
          "id": {
            "format": "uuid",
            "title": "Id",
            "type": "string"
          },
          "index_type_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Index Type Name"
          },
          "is_transient": {
            "default": false,
            "title": "Is Transient",
            "type": "boolean"
          },
          "name": {
            "title": "Name",
            "type": "string"
          },
          "priority": {
            "anyOf": [
              {
                "exclusiveMinimum": 0.0,
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "title": "Priority"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "taiga_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Taiga Id"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "id",
          "name",
          "data_type",
          "group_id",
          "dataset_metadata",
          "index_type_name",
          "group",
          "columns_metadata"
        ],
        "title": "TabularDatasetResponse",
        "type": "object"
      },
      "TabularDatasetUpdateParams": {
        "description": "Tabular dataset parameters that are editable",
        "properties": {
          "data_type": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Data type grouping for your dataset",
            "title": "Data Type"
          },
          "dataset_metadata": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "A dictionary of additional dataset metadata that is not already provided",
            "title": "Dataset Metadata"
          },
          "description": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional long description of the dataset",
            "title": "Description"
          },
          "format": {
            "const": "tabular",
            "enum": [
              "tabular"
            ],
            "title": "Format",
            "type": "string"
          },
          "given_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "The 'given ID' for this dataset",
            "title": "Given Id"
          },
          "group_id": {
            "anyOf": [
              {
                "format": "uuid",
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Id of the group the dataset belongs to",
            "title": "Group Id"
          },
          "name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "Name of dataset",
            "title": "Name"
          },
          "priority": {
            "anyOf": [
              {
                "type": "integer"
              },
              {
                "type": "null"
              }
            ],
            "description": "Numeric value representing priority of the dataset within its `data_type`",
            "title": "Priority"
          },
          "short_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short label describing dataset",
            "title": "Short Name"
          },
          "version": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional short version identifier",
            "title": "Version"
          }
        },
        "required": [
          "format"
        ],
        "title": "TabularDatasetUpdateParams",
        "type": "object"
      },
      "TabularDimensionsInfo": {
        "properties": {
          "columns": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Column names in the table to include in subsetted data. If None, return all columns",
            "title": "Columns"
          },
          "identifier": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/FeatureSampleIdentifier"
              },
              {
                "type": "null"
              }
            ],
            "description": "Specifies whether the indices given are dimension ids or their labels"
          },
          "indices": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "Dimension indices to subset the dataset by. If None, return all the indices in the dataset",
            "title": "Indices"
          }
        },
        "title": "TabularDimensionsInfo",
        "type": "object"
      },
      "UpdateDimensionType": {
        "properties": {
          "display_name": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Display Name"
          },
          "metadata_dataset_id": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "title": "Metadata Dataset Id"
          },
          "properties_to_index": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "title": "Properties To Index"
          }
        },
        "title": "UpdateDimensionType",
        "type": "object"
      },
      "UploadFileResponse": {
        "properties": {
          "file_id": {
            "title": "File Id",
            "type": "string"
          }
        },
        "required": [
          "file_id"
        ],
        "title": "UploadFileResponse",
        "type": "object"
      },
      "ValidationError": {
        "properties": {
          "loc": {
            "items": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "integer"
                }
              ]
            },
            "title": "Location",
            "type": "array"
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        },
        "required": [
          "loc",
          "msg",
          "type"
        ],
        "title": "ValidationError",
        "type": "object"
      },
      "ValueType": {
        "enum": [
          "continuous",
          "categorical"
        ],
        "title": "ValueType",
        "type": "string"
      }
    }
  },
  "info": {
    "title": "Breadbox",
    "version": "3.14.1"
  },
  "openapi": "3.1.0",
  "paths": {
    "/api/task/{id}": {
      "get": {
        "operationId": "get_task_status",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "title": "Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Task Status",
        "tags": [
          "api"
        ]
      }
    },
    "/compute/compute_univariate_associations": {
      "post": {
        "operationId": "compute_univariate_associations",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ComputeParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ComputeResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Compute Univariate Associations",
        "tags": [
          "compute"
        ]
      }
    },
    "/compute/test_task": {
      "get": {
        "operationId": "test_task",
        "parameters": [
          {
            "in": "query",
            "name": "message",
            "required": true,
            "schema": {
              "title": "Message"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Test Task",
        "tags": [
          "compute"
        ]
      }
    },
    "/data_types/": {
      "get": {
        "operationId": "get_data_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DataType"
                  },
                  "title": "Response Get Data Types",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Data Types",
        "tags": [
          "data_types"
        ]
      },
      "post": {
        "operationId": "add_data_type",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_data_type"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataType"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Data Type",
        "tags": [
          "data_types"
        ]
      }
    },
    "/data_types/priorities": {
      "get": {
        "operationId": "get_data_type_valid_priorities",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Data Type Valid Priorities",
        "tags": [
          "data_types"
        ]
      }
    },
    "/data_types/{data_type}": {
      "delete": {
        "description": "Delete a feature type, if the user is an admin.",
        "operationId": "remove_data_type",
        "parameters": [
          {
            "in": "path",
            "name": "data_type",
            "required": true,
            "schema": {
              "title": "Data Type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Data Type",
        "tags": [
          "data_types"
        ]
      }
    },
    "/dataset-v2/": {
      "post": {
        "description": "Create a new dataset.\n\n`name`: Name of dataset\n\n`file_ids`: Ordered list of file ids from the chunked dataset uploads\n\n`dataset_md5`: md5 hash for entire dataset file\n\n`data_type`: Data type grouping for your dataset\n\n`group_id`: ID of the group the dataset belongs to. Required for non-transient datasets.\n\n`given_id`: Stable human-readable identifier that the portal uses to look up specific datasets.\n\n`priority`: Numeric value assigned to the dataset with `1` being highest priority within the `data_type`, used for displaying order of datasets to show for a specific `data_type` in UI.\n\n`taiga_id`: Taiga ID the dataset is sourced from.\n\n`is_transient`: Transient datasets can be deleted - should only be set to true for non-public short-term-use datasets like custom analysis results.\n\n`dataset_metadata`: Contains a dictionary of additional dataset values that are not already provided above.\n\nFor matrix dataset format:\n\n`units`: Units for the values in the dataset, used for display\n\n`feature_type`: Type of features your dataset contains\n\n`sample_type`: Type of samples your dataset contains\n\n`value_type`: Value 'continuous' if dataset contains numerical values or 'categorical' if dataset contains string categories as values.\n\n`allowed_values`: Only provide if 'value_type' is 'categorical'. Must contain all possible categorical values\n\nFor table dataset format:\n\n`index_type`: Feature type or sample type name that is used as index in the table dataset format. Used to validate the identifier of the dimension type is included in the dataset.\n\n`columns_metadata`: List of objects containing info about each column in the table dataset format.\n\n    - `units`: Units for the values in the column, used for display\n    - `col_type`: Annotation type for the column. Annotation types may include: `continuous`, `categorical`, `binary`, `text`, or `list_strings`",
        "operationId": "add_dataset_uploads",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "discriminator": {
                  "mapping": {
                    "matrix": "#/components/schemas/MatrixDatasetParams",
                    "tabular": "#/components/schemas/TableDatasetParams"
                  },
                  "propertyName": "format"
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MatrixDatasetParams"
                  },
                  {
                    "$ref": "#/components/schemas/TableDatasetParams"
                  }
                ],
                "title": "Dataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "202": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDatasetResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Dataset Uploads",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/": {
      "get": {
        "description": "Get metadata for all datasets available to current user.\n\nIf `feature_id` and `feature_type` are specified, we return only the datasets that contain that feature.\n\nIf `feature_type` is specified without `feature_id`, then we return the datasets\nthat have that `feature_type`.\n\nSimilar for `sample_id` and `sample_type`.",
        "operationId": "get_datasets",
        "parameters": [
          {
            "in": "query",
            "name": "feature_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Feature Id"
            }
          },
          {
            "in": "query",
            "name": "feature_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Feature Type"
            }
          },
          {
            "in": "query",
            "name": "sample_id",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sample Id"
            }
          },
          {
            "in": "query",
            "name": "sample_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Sample Type"
            }
          },
          {
            "in": "query",
            "name": "value_type",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/ValueType"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Value Type"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "discriminator": {
                      "mapping": {
                        "matrix_dataset": "#/components/schemas/MatrixDatasetResponse",
                        "tabular_dataset": "#/components/schemas/TabularDatasetResponse"
                      },
                      "propertyName": "format"
                    },
                    "oneOf": [
                      {
                        "$ref": "#/components/schemas/MatrixDatasetResponse"
                      },
                      {
                        "$ref": "#/components/schemas/TabularDatasetResponse"
                      }
                    ]
                  },
                  "title": "Response Get Datasets",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Datasets",
        "tags": [
          "datasets"
        ]
      },
      "post": {
        "description": "Create a new dataset.",
        "operationId": "add_dataset",
        "parameters": [
          {
            "description": "Only provide if 'value_type' is 'categorical'. Must contain all possible categorical values",
            "in": "query",
            "name": "allowed_values",
            "required": false,
            "schema": {
              "description": "Only provide if 'value_type' is 'categorical'. Must contain all possible categorical values",
              "items": {
                "type": "string"
              },
              "minItems": 1,
              "title": "Allowed Values",
              "type": "array",
              "uniqueItems": true
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_dataset"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddDatasetResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Dataset",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/data/{dataset_id}": {
      "post": {
        "deprecated": true,
        "description": "Get dataset dataframe subset given the features and samples. Filtering should be possible using either labels (cell line name, gene name, etc.) or ids (depmap_id, entrez_id, etc.). If features or samples are not specified, return all features or samples",
        "operationId": "get_dataset_data",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Body_get_dataset_data"
                  }
                ],
                "title": "Body"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dataset Data",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/dimension/data/": {
      "post": {
        "description": "Load all values, IDs, and labels for a given dimension (specified by SliceQuery).",
        "operationId": "get_dimension_data",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Body_get_dimension_data"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionDataResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dimension Data",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/dimensions/": {
      "get": {
        "description": "Get dimension search index results for the given prefix, with results ordered by priority and then label.",
        "operationId": "get_dimensions",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "required": true,
            "schema": {
              "title": "Limit",
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "include_referenced_by",
            "required": false,
            "schema": {
              "default": "F",
              "title": "Include Referenced By",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "prefix",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Prefix"
            }
          },
          {
            "in": "query",
            "name": "substring",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "items": {
                    "type": "string"
                  },
                  "type": "array"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Substring"
            }
          },
          {
            "in": "query",
            "name": "type_name",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "string"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Type Name"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DimensionSearchIndexResponse"
                  },
                  "title": "Response Get Dimensions",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dimensions",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/features/data/": {
      "get": {
        "description": "Load data for each of the given dataset_id, feature_id pairs.\nThis differs from the /get-features endpoint in the type of ID it\naccepts as input and the format of the response. This endpoint also\ndoes not do any filtering or grouping of feature values.",
        "operationId": "get_feature_data",
        "parameters": [
          {
            "description": "dataset UUIDs specifying which dataset contains each given feature",
            "in": "query",
            "name": "dataset_ids",
            "required": false,
            "schema": {
              "default": [],
              "description": "dataset UUIDs specifying which dataset contains each given feature",
              "items": {
                "type": "string"
              },
              "title": "Dataset Ids",
              "type": "array"
            }
          },
          {
            "description": "natural keys specifying the features for which data should be retrieved",
            "in": "query",
            "name": "feature_ids",
            "required": false,
            "schema": {
              "default": [],
              "description": "natural keys specifying the features for which data should be retrieved",
              "items": {
                "type": "string"
              },
              "title": "Feature Ids",
              "type": "array"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeatureResponse"
                  },
                  "title": "Response Get Feature Data",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Feature Data",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/features/{dataset_id}": {
      "get": {
        "description": "Get information about each feature belonging to a given dataset.",
        "operationId": "get_dataset_features",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dataset Features",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/matrix/{dataset_id}": {
      "post": {
        "operationId": "get_matrix_dataset_data",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "description": "If 'strict' set to True, missing indices or columns will return an error",
            "in": "query",
            "name": "strict",
            "required": false,
            "schema": {
              "default": false,
              "description": "If 'strict' set to True, missing indices or columns will return an error",
              "title": "Strict",
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/MatrixDimensionsInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Matrix Dataset Data",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/samples/{dataset_id}": {
      "get": {
        "description": "Get information about each sample belonging to a given dataset.\nFor example, if the samples are depmap models, then this should\nreturn depmap_ids as ids and cell line names as labels.",
        "operationId": "get_dataset_samples",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "title": "Dataset Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dataset Samples",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/tabular/{dataset_id}": {
      "post": {
        "operationId": "get_tabular_dataset_data",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Dataset Id"
            }
          },
          {
            "description": "If 'strict' set to True, missing indices or columns will return an error",
            "in": "query",
            "name": "strict",
            "required": false,
            "schema": {
              "default": false,
              "description": "If 'strict' set to True, missing indices or columns will return an error",
              "title": "Strict",
              "type": "boolean"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TabularDimensionsInfo"
              }
            }
          }
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Tabular Dataset Data",
        "tags": [
          "datasets"
        ]
      }
    },
    "/datasets/{dataset_id}": {
      "delete": {
        "description": "Delete a dataset, if the user has write permissions for the containing group.\n\n`dataset_id` - UUID string of the dataset id",
        "operationId": "remove_dataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "format": "uuid",
              "title": "Dataset Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Dataset",
        "tags": [
          "datasets"
        ]
      },
      "get": {
        "description": "Get metadata for a dataset, if it exists and is available to the user.",
        "operationId": "get_dataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Dataset Id"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "matrix_dataset": "#/components/schemas/MatrixDatasetResponse",
                      "tabular_dataset": "#/components/schemas/TabularDatasetResponse"
                    },
                    "propertyName": "format"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MatrixDatasetResponse"
                    },
                    {
                      "$ref": "#/components/schemas/TabularDatasetResponse"
                    }
                  ],
                  "title": "Response Get Dataset"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dataset",
        "tags": [
          "datasets"
        ]
      },
      "patch": {
        "description": "Update the dataset metadata\n\nThe following parameters may be provided or omitted if no change for the value:\n`format` - Required parameter. Must be 'matrix' or 'tabular' and match the format of the given dataset\n`name` - Optional parameter. Name of dataset\n`data_type` - Optional parameter. Data type grouping for your dataset\n`group_id` - Optional parameter. Id of the group the dataset belongs to\n`priority` - Optional parameter. Numeric value representing priority of the dataset within its `data_type`\n`dataset_metadata` - Optional parameter. A dictionary of additional dataset metadata that is not already provided\n`units` - Optional parameter for matrix dataset only. Units for the values in the dataset",
        "operationId": "update_dataset",
        "parameters": [
          {
            "in": "path",
            "name": "dataset_id",
            "required": true,
            "schema": {
              "anyOf": [
                {
                  "format": "uuid",
                  "type": "string"
                },
                {
                  "type": "string"
                }
              ],
              "title": "Dataset Id"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "discriminator": {
                  "mapping": {
                    "matrix": "#/components/schemas/MatrixDatasetUpdateParams",
                    "tabular": "#/components/schemas/TabularDatasetUpdateParams"
                  },
                  "propertyName": "format"
                },
                "oneOf": [
                  {
                    "$ref": "#/components/schemas/MatrixDatasetUpdateParams"
                  },
                  {
                    "$ref": "#/components/schemas/TabularDatasetUpdateParams"
                  }
                ],
                "title": "Dataset Update Params"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "discriminator": {
                    "mapping": {
                      "matrix_dataset": "#/components/schemas/MatrixDatasetResponse",
                      "tabular_dataset": "#/components/schemas/TabularDatasetResponse"
                    },
                    "propertyName": "format"
                  },
                  "oneOf": [
                    {
                      "$ref": "#/components/schemas/MatrixDatasetResponse"
                    },
                    {
                      "$ref": "#/components/schemas/TabularDatasetResponse"
                    }
                  ],
                  "title": "Response Update Dataset"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Update Dataset",
        "tags": [
          "datasets"
        ]
      }
    },
    "/downloads/custom": {
      "post": {
        "operationId": "export_dataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportDatasetParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportDatasetResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Export Dataset",
        "tags": [
          "downloads"
        ]
      }
    },
    "/downloads/custom_merged": {
      "post": {
        "operationId": "export_merged_dataset",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ExportMergedDatasetParams"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ExportDatasetResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Export Merged Dataset",
        "tags": [
          "downloads"
        ]
      }
    },
    "/downloads/data_slicer/download": {
      "get": {
        "operationId": "data_slicer_download_downloads_data_slicer_download_get",
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "file_path",
            "required": true,
            "schema": {
              "title": "File Path",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Data Slicer Download",
        "tags": [
          "downloads"
        ]
      }
    },
    "/downloads/data_slicer/validate_data_slicer_features": {
      "post": {
        "description": "From the given list of feature_labels, determine which are valid metadata labels\nin any dataset (case-insensitive). Return lists of both valid and invalid labels.\n\nWarning: For simplicity's sake, this is only returning metadata labels as \"valid\".\nIf we want this to work for datasets that don't have metadata (that use their given ids as labels), \nwe'll need to make some changes to the implementation of this endpoint.",
        "operationId": "validate_data_slicer_features_downloads_data_slicer_validate_data_slicer_features_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FeatureValidationQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "title": "Response Validate Data Slicer Features Downloads Data Slicer Validate Data Slicer Features Post",
                  "type": "object"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Validate Data Slicer Features",
        "tags": [
          "downloads"
        ]
      }
    },
    "/groups/": {
      "get": {
        "description": "Get groups that the user has access to.\n\nIf `write_access` is True (truthy), then only return groups that the user has write\naccess to.",
        "operationId": "get_groups",
        "parameters": [
          {
            "in": "query",
            "name": "write_access",
            "required": false,
            "schema": {
              "anyOf": [
                {
                  "type": "boolean"
                },
                {
                  "type": "null"
                }
              ],
              "title": "Write Access"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/GroupOut"
                  },
                  "title": "Response Get Groups",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Groups",
        "tags": [
          "groups"
        ]
      },
      "post": {
        "description": "Create an access control group.\n\nOnly available to admin users.\n\nAutomatically adds the user creating the group to the list of users with write\npermissions for the group.",
        "operationId": "add_group",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Group",
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{group_entry_id}/removeAccess": {
      "delete": {
        "description": "Remove group entry by a given group entry id. Only users with write access can delete entries",
        "operationId": "remove_group_access",
        "parameters": [
          {
            "in": "path",
            "name": "group_entry_id",
            "required": true,
            "schema": {
              "title": "Group Entry Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Group Entry",
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{group_id}": {
      "delete": {
        "description": "Deletes group that the user has write access to.\n\nWARNING: Also deletes group entries in the group. Cannot delete group if there are datasets in group.",
        "operationId": "remove_group",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Group",
        "tags": [
          "groups"
        ]
      },
      "get": {
        "description": "Get a group by group id. Returns the group if user has access or is part of the group.",
        "operationId": "get_group",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Group",
        "tags": [
          "groups"
        ]
      }
    },
    "/groups/{group_id}/addAccess": {
      "post": {
        "description": "Give a user or group of users (by email suffix) read or write permissions for a\ngroup.",
        "operationId": "add_group_entry",
        "parameters": [
          {
            "in": "path",
            "name": "group_id",
            "required": true,
            "schema": {
              "title": "Group Id",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GroupEntryIn"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GroupEntry"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Group Entry",
        "tags": [
          "groups"
        ]
      }
    },
    "/health_check/basic": {
      "get": {
        "operationId": "basic_check",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Basic Check",
        "tags": [
          "health_check"
        ]
      }
    },
    "/health_check/log-test": {
      "get": {
        "operationId": "log_test",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Log Test",
        "tags": [
          "health_check"
        ]
      }
    },
    "/health_check/ok": {
      "get": {
        "operationId": "ok",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Ok",
        "tags": [
          "health_check"
        ]
      }
    },
    "/health_check/simulate-error": {
      "get": {
        "operationId": "simulate_error",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Simulate Error",
        "tags": [
          "health_check"
        ]
      }
    },
    "/metadata/": {
      "get": {
        "description": "Provide either a feature/sample id or label and return all metadata for that feature/sample",
        "operationId": "get_metadata",
        "parameters": [
          {
            "in": "query",
            "name": "label_or_id",
            "required": true,
            "schema": {
              "title": "Label Or Id",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MetadataResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Metadata",
        "tags": [
          "metadata"
        ]
      }
    },
    "/metadata/cellLineUrlRoot": {
      "get": {
        "operationId": "get_cell_line_url_root_metadata_cellLineUrlRoot_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Cell Line Url Root",
        "tags": [
          "metadata"
        ]
      }
    },
    "/metadata/search": {
      "get": {
        "operationId": "get_metadata_search_options",
        "parameters": [
          {
            "in": "query",
            "name": "text",
            "required": true,
            "schema": {
              "title": "Text",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Metadata Search Options",
        "tags": [
          "metadata"
        ]
      }
    },
    "/partials/data_table/cell_line_selector_lines": {
      "get": {
        "operationId": "get_cell_line_selector_lines",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Cell Line Selector Lines",
        "tags": [
          "partials"
        ]
      }
    },
    "/temp/context": {
      "post": {
        "description": "Get the full list of IDs and labels (in any dataset) which match the given context.\nAlso get the total number of \"candidate\" records (all records with labels belonging to the dimension type).\nRequests must be in the version 2 context format.",
        "operationId": "evaluate_context",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "allOf": [
                  {
                    "$ref": "#/components/schemas/Context"
                  }
                ],
                "description": "A Data Explorer 2 context expression",
                "title": "Context"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ContextMatchResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Evaluate Context",
        "tags": [
          "temp"
        ]
      }
    },
    "/types/dimensions": {
      "get": {
        "operationId": "get_dimension_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/DimensionType"
                  },
                  "title": "Response Get Dimension Types",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "List Dimension Types Endpoint",
        "tags": [
          "types"
        ]
      },
      "post": {
        "description": "Add a either a sample or feature type",
        "operationId": "add_dimension_type",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddDimensionType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionType"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Dimension Type Endpoint",
        "tags": [
          "types"
        ]
      }
    },
    "/types/dimensions/{name}": {
      "delete": {
        "description": "Delete a feature type, if the user is an admin.",
        "operationId": "remove_dimension_type",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Dimension Type Endpoint",
        "tags": [
          "types"
        ]
      },
      "get": {
        "operationId": "get_dimension_type",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionType"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Get Dimension Type Endpoint",
        "tags": [
          "types"
        ]
      },
      "patch": {
        "operationId": "update_dimension_type",
        "parameters": [
          {
            "in": "path",
            "name": "name",
            "required": true,
            "schema": {
              "title": "Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDimensionType"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DimensionType"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Update Dimension Type Endpoint",
        "tags": [
          "types"
        ]
      }
    },
    "/types/feature": {
      "get": {
        "deprecated": true,
        "operationId": "get_feature_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/FeatureTypeOut"
                  },
                  "title": "Response Get Feature Types",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Feature Types",
        "tags": [
          "types"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "add_feature_type",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_feature_type"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureTypeOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Feature Type",
        "tags": [
          "types"
        ]
      }
    },
    "/types/feature/{feature_type_name}/metadata": {
      "patch": {
        "deprecated": true,
        "operationId": "update_feature_type_metadata",
        "parameters": [
          {
            "in": "path",
            "name": "feature_type_name",
            "required": true,
            "schema": {
              "title": "Feature Type Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_feature_type_metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FeatureTypeOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Update Feature Type Metadata",
        "tags": [
          "types"
        ]
      }
    },
    "/types/feature/{feature_type}": {
      "delete": {
        "deprecated": true,
        "description": "Delete a feature type, if the user is an admin.",
        "operationId": "remove_feature_type",
        "parameters": [
          {
            "in": "path",
            "name": "feature_type",
            "required": true,
            "schema": {
              "title": "Feature Type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Feature Type",
        "tags": [
          "types"
        ]
      }
    },
    "/types/sample": {
      "get": {
        "deprecated": true,
        "operationId": "get_sample_types",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/SampleTypeOut"
                  },
                  "title": "Response Get Sample Types",
                  "type": "array"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get Sample Types",
        "tags": [
          "types"
        ]
      },
      "post": {
        "deprecated": true,
        "operationId": "add_sample_type",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_add_sample_type"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleTypeOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Add Sample Type",
        "tags": [
          "types"
        ]
      }
    },
    "/types/sample/{sample_type_name}/metadata": {
      "patch": {
        "deprecated": true,
        "operationId": "update_sample_type_metadata",
        "parameters": [
          {
            "in": "path",
            "name": "sample_type_name",
            "required": true,
            "schema": {
              "title": "Sample Type Name",
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_update_sample_type_metadata"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SampleTypeOut"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Update Sample Type Metadata",
        "tags": [
          "types"
        ]
      }
    },
    "/types/sample/{sample_type}": {
      "delete": {
        "deprecated": true,
        "description": "Delete a sample type, if the user is an admin.",
        "operationId": "remove_sample_type",
        "parameters": [
          {
            "in": "path",
            "name": "sample_type",
            "required": true,
            "schema": {
              "title": "Sample Type",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Delete Sample Type",
        "tags": [
          "types"
        ]
      }
    },
    "/uploads/file": {
      "post": {
        "operationId": "upload_file",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "$ref": "#/components/schemas/Body_upload_file"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadFileResponse"
                }
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            },
            "description": "Validation Error"
          }
        },
        "summary": "Upload File"
      }
    },
    "/user/": {
      "get": {
        "operationId": "get_user",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {}
              }
            },
            "description": "Successful Response"
          },
          "400": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Bad Request"
          },
          "403": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Forbidden"
          },
          "404": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Not Found"
          },
          "409": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPError"
                }
              }
            },
            "description": "Conflict"
          }
        },
        "summary": "Get User",
        "tags": [
          "user"
        ]
      }
    }
  }
}