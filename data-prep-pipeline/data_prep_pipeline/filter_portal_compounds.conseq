# In this paritcular rule, a stub-artifact input is being used which doesn't have a dataset_id.
# This is because the prism_oncology_reference_auc_matrix is optional meaning it is available for internal
# but not for public releases. Conseq doesn't support optional inputs as of 25q3. However, we can circumvent that
# by using an all{stub-artifact|[onref_auc_matrix]} input. This way prism_oncology_reference_auc_matrix is not
# an empty list. So in case of public releases, the rule will run without error even without the onref_auc_matrix input due
# to the length > 1 check. In case of internal releases, the rule will run with the onref_auc_matrix input.

rule filter-portal-compounds:
    inputs:
        repsdrug_matrix={"type": "repsdrug_matrix"},
        repsdrug_auc_matrix={"type": "repsdrug_auc_matrix"},
        portal_compounds={"type": "portal_compounds"},
        prism_oncology_reference_auc_matrix=all{"type"~ "prism_oncology_reference_auc_matrix|stub-artifact"},
        script=fileref('../scripts/portal_compounds/filter_portal_compounds.py'),
    outputs:
        {
            "type": "filtered_portal_compounds",
            "filename": {"$filename": "filtered_portal_compounds.csv"},
            "orig_dataset_id": "{{inputs.portal_compounds.dataset_id}}"
        }

    run "python3 {{inputs.script.filename}} \
        {{inputs.repsdrug_matrix.dataset_id}} \
        {{inputs.repsdrug_auc_matrix.dataset_id}} \
        {{inputs.portal_compounds.dataset_id}} \
        {% if inputs.prism_oncology_reference_auc_matrix|length > 1 %} \
        --prism_oncology_reference_auc_matrix_taiga_id {{(inputs.prism_oncology_reference_auc_matrix|selectattr('dataset_id', 'defined')|first).dataset_id}} \
        {% endif %} \
        filtered_portal_compounds.csv"
