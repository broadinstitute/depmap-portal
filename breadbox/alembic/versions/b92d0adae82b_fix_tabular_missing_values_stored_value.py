"""Fix tabular missing values stored value

Revision ID: b92d0adae82b
Revises: cf1c8833c9f7
Create Date: 2024-07-16 08:53:16.271861

"""
from alembic import op
from sqlalchemy import text

# revision identifiers, used by Alembic.
revision = "b92d0adae82b"
down_revision = "cf1c8833c9f7"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - Unsure why unique constraints suddenly getting named now but keep since necessary
    with op.batch_alter_table("group", schema=None) as batch_op:
        batch_op.create_unique_constraint(batch_op.f("uq_group_name"), ["name"])

    with op.batch_alter_table("group_entry", schema=None) as batch_op:
        batch_op.create_unique_constraint(
            batch_op.f("uq_group_entry_email"), ["email", "group_id"]
        )

    conn = op.get_bind()
    # Completed sanity check already to ensure no 'nan' values are from an index identifier
    conn.execute(text("UPDATE tabular_cell SET value = NULL WHERE value = 'nan'"))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("group_entry", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_group_entry_email"), type_="unique")

    with op.batch_alter_table("group", schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f("uq_group_name"), type_="unique")

    # ### end Alembic commands ###
