"""Dimension table with subtypes and constraints

Revision ID: effce7dff847
Revises: 5e25ce60e5e6
Create Date: 2022-11-08 15:50:44.310582

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "effce7dff847"
down_revision = "5e25ce60e5e6"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "dimension",
        sa.Column("id", sa.String(length=36), nullable=False),
        sa.Column("dataset_id", sa.String(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("dataset_dimension_type", sa.String(), nullable=False),
        sa.Column("subtype", sa.String(), nullable=False),
        sa.Column(
            "annotation_type",
            sa.Enum(
                "continuous", "categorical", "binary", "text", name="annotationtype"
            ),
            nullable=True,
        ),
        sa.Column("index", sa.Integer(), nullable=True),
        sa.Column("feature_label", sa.String(), nullable=True),
        sa.CheckConstraint(
            "((subtype == 'sample_annotation_metadata' AND 'index' IS NULL) OR (subtype == 'feature_annotation_metadata' AND 'index' IS NULL) OR NOT(subtype == 'dataset_sample' AND 'index' IS NULL) OR NOT(subtype == 'dataset_feature' AND 'index' IS NULL))"
        ),
        sa.CheckConstraint(
            "(subtype = 'dataset_feature' AND annotation_type = 'null') OR (subtype = 'dataset_sample' AND annotation_type = 'null') OR (subtype = 'feature_annotation_metadata' AND annotation_type != 'null') OR (subtype = 'sample_annotation_metadata' AND annotation_type != 'null')"
        ),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("name", "dataset_id"),
    )
    op.create_index(
        "idx_dimension_dataset_id", "dimension", ["dataset_id", "name"], unique=False
    )
    op.create_table(
        "catalog_node",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("dataset_id", sa.String(), nullable=True),
        sa.Column("dimension_id", sa.String(), nullable=True),
        sa.Column("priority", sa.Integer(), nullable=True),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("label", sa.String(), nullable=False),
        sa.Column("is_continuous", sa.Boolean(), nullable=True),
        sa.Column("is_categorical", sa.Boolean(), nullable=True),
        sa.Column("is_binary", sa.Boolean(), nullable=True),
        sa.Column("is_text", sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["dimension_id"], ["dimension.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["parent_id"], ["catalog_node.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dataset_id_dimension_id",
        "catalog_node",
        ["dataset_id", "dimension_id"],
        unique=False,
    )
    op.create_table(
        "feature_annotation_value",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("feature_annotation_id", sa.String(), nullable=True),
        sa.Column("feature_id", sa.String(), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["feature_annotation_id"], ["dimension.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("feature_id", "feature_annotation_id"),
    )
    op.create_index(
        "idx_feature_annotation_id_feature_id",
        "feature_annotation_value",
        ["feature_annotation_id", "feature_id"],
        unique=False,
    )
    op.create_table(
        "sample_annotation_value",
        sa.Column("id", sa.Integer(), autoincrement=True, nullable=False),
        sa.Column("sample_annotation_id", sa.String(), nullable=True),
        sa.Column("sample_id", sa.String(), nullable=False),
        sa.Column("value", sa.Text(), nullable=True),
        sa.ForeignKeyConstraint(
            ["sample_annotation_id"], ["dimension.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sample_id", "sample_annotation_id"),
    )
    op.create_index(
        "idx_sample_annotation_id_sample_id",
        "sample_annotation_value",
        ["sample_annotation_id", "sample_id"],
        unique=False,
    )
    op.drop_index("idx_dataset_id_feature_idx_id", table_name="feature_catalog_node")
    op.drop_table("feature_catalog_node")
    op.drop_index("idx_feature_index_dataset_id", table_name="feature_index")
    op.drop_table("feature_index")
    op.drop_index("idx_sample_index_dataset_id", table_name="sample_index")
    op.drop_table("sample_index")
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "sample_index",
        sa.Column("id", sa.VARCHAR(length=36), nullable=False),
        sa.Column("dataset_id", sa.VARCHAR(), nullable=True),
        sa.Column("sample_id", sa.VARCHAR(), nullable=True),
        sa.Column("index", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("sample_id", "dataset_id"),
    )
    op.create_index(
        "idx_sample_index_dataset_id",
        "sample_index",
        ["dataset_id", "sample_id"],
        unique=False,
    )
    op.create_table(
        "feature_index",
        sa.Column("id", sa.VARCHAR(length=36), nullable=False),
        sa.Column("dataset_id", sa.VARCHAR(), nullable=True),
        sa.Column("feature_id", sa.VARCHAR(), nullable=True),
        sa.Column("label", sa.VARCHAR(), nullable=True),
        sa.Column("index", sa.INTEGER(), nullable=True),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("feature_id", "dataset_id"),
    )
    op.create_index(
        "idx_feature_index_dataset_id",
        "feature_index",
        ["dataset_id", "feature_id"],
        unique=False,
    )
    op.create_table(
        "feature_catalog_node",
        sa.Column("id", sa.INTEGER(), nullable=False),
        sa.Column("dataset_id", sa.VARCHAR(), nullable=True),
        sa.Column("feature_idx_id", sa.VARCHAR(), nullable=True),
        sa.Column("priority", sa.INTEGER(), nullable=True),
        sa.Column("parent_id", sa.INTEGER(), nullable=True),
        sa.Column("label", sa.VARCHAR(), nullable=False),
        sa.Column("is_continuous", sa.BOOLEAN(), nullable=True),
        sa.Column("is_categorical", sa.BOOLEAN(), nullable=True),
        sa.Column("is_binary", sa.BOOLEAN(), nullable=True),
        sa.ForeignKeyConstraint(["dataset_id"], ["dataset.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(
            ["feature_idx_id"], ["feature_index.id"], ondelete="CASCADE"
        ),
        sa.ForeignKeyConstraint(
            ["parent_id"], ["feature_catalog_node.id"], ondelete="CASCADE"
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        "idx_dataset_id_feature_idx_id",
        "feature_catalog_node",
        ["dataset_id", "feature_idx_id"],
        unique=False,
    )
    op.drop_index(
        "idx_sample_annotation_id_sample_id", table_name="sample_annotation_value"
    )
    op.drop_table("sample_annotation_value")
    op.drop_index(
        "idx_feature_annotation_id_feature_id", table_name="feature_annotation_value"
    )
    op.drop_table("feature_annotation_value")
    op.drop_index("idx_dataset_id_dimension_id", table_name="catalog_node")
    op.drop_table("catalog_node")
    op.drop_index("idx_dimension_dataset_id", table_name="dimension")
    op.drop_table("dimension")
    # ### end Alembic commands ###
