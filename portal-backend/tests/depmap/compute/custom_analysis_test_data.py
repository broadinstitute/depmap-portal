from typing import List
import numpy as np
from numpy import nan, ndarray
from depmap_compute.analysis_tasks_interface import Feature


def get_test_run_lm_data():
    value_query_vector: List[int] = [
        -0.39429837465286255,
        -0.23868946731090546,
        -0.15590772032737732,
        0.5417695045471191,
        0.3112448453903198,
        0.32624807953834534,
        0.3909493386745453,
        -0.21967287361621857,
        -0.3824126422405243,
        -1.0152833461761475,
    ]

    vector_is_dependent: bool = False

    features: List[Feature] = [
        Feature("TRIL", "slice/RNAi_merged/14/entity_id"),
        Feature("UNC93B1", "slice/RNAi_merged/15/entity_id"),
        Feature("PSG7", "slice/RNAi_merged/10/entity_id"),
        Feature("KDM7A", "slice/RNAi_merged/5/entity_id"),
        Feature("F8A1", "slice/RNAi_merged/3/entity_id"),
        Feature("ANOS1", "slice/RNAi_merged/2/entity_id"),
        Feature("HNF1B", "slice/RNAi_merged/4/entity_id"),
        Feature("SOX10", "slice/RNAi_merged/11/entity_id"),
        Feature("NRAS", "slice/RNAi_merged/9/entity_id"),
        Feature("MAP4K4", "slice/RNAi_merged/6/entity_id"),
        Feature("MED1", "slice/RNAi_merged/7/entity_id"),
    ]

    dataset: ndarray(2) = [
        [
            -1.20851450e-01,
            -7.63087985e-02,
            -1.42194505e-01,
            nan,
            nan,
            nan,
            nan - 6.75722773e-02,
            -2.42967988e-01,
            -3.05974146e-01,
        ],
        [
            -2.98770808e-02,
            nan,
            nan,
            3.88938920e-02,
            1.87724865e-02,
            -7.66004239e-02,
            2.38995133e-02,
            nan,
            nan,
            -1.52940707e-03,
        ],
        [
            -6.89524125e-02,
            1.16811896e-01,
            -2.53474684e-01,
            1.65916339e-01,
            -2.86295578e-02,
            4.58099429e-02,
            -7.16223943e-02,
            -1.61102389e-02,
            -2.39922103e-02,
            3.79806902e-02,
        ],
        [
            3.34827414e-02,
            7.77900094e-02,
            3.93894495e-02,
            nan,
            nan,
            nan,
            nan,
            7.69847842e-02,
            4.94056146e-02,
            1.51573512e-01,
        ],
        [
            2.57911943e-01,
            nan,
            nan,
            1.75029697e-01,
            5.08641950e-02,
            -2.23379684e-01,
            2.79791663e-01,
            nan,
            nan,
            1.89985787e-01,
        ],
        [
            1.89433530e-01,
            2.91776610e-02,
            -4.30281796e-02,
            6.38244857e-02,
            7.16834572e-02,
            4.65929264e-02,
            1.75847352e-02,
            nan,
            nan,
            4.75105788e-03,
        ],
        [
            6.82686525e-03,
            4.10148112e-03,
            1.72304478e-01,
            1.58456897e-02,
            7.57362774e-02,
            -4.98775019e-01,
            2.71691854e-01,
            2.34049735e-02,
            -6.36773406e-03,
            6.34315203e-02,
        ],
        [
            -2.33471368e-01,
            -3.83330245e-01,
            -9.32757385e-01,
            1.03697447e-02,
            -5.97610012e-03,
            1.42147345e-01,
            6.32166333e-02,
            -1.61974476e00,
            -9.60539060e-01,
            -4.17728298e-01,
        ],
        [
            2.59594970e-02,
            1.49571625e-02,
            2.08735336e-02,
            8.73504018e-02,
            3.11007876e-02,
            3.33723374e-01,
            9.96453363e-02,
            5.67279091e-02,
            -1.29118325e00,
            -2.35417073e-02,
        ],
        [
            2.05230320e-01,
            -1.33196584e-02,
            9.01992920e-02,
            1.33337857e-01,
            1.40554854e-01,
            -1.10299400e-01,
            6.90240654e-02,
            1.42145650e-01,
            7.88164941e-02,
            2.70014697e-01,
        ],
        [
            -2.19619725e-01,
            -4.27559094e-01,
            -2.24051301e-01,
            -1.95095284e-01,
            3.46224774e-02,
            -3.73509286e-01,
            -2.93685646e-03,
            -8.77784102e-01,
            -4.03315897e-01,
            -9.86910696e-01,
        ],
    ]

    mat_file_name = "/Users/amourey/dev/depmap/webapp_data/RNAi_merged-7..hdf5"

    result_task_dir = "/Users/amourey/dev/depmap/webapp_data/results/20220723/fef9423a-b591-47e8-b31c-6caccc02ef55"

    return {
        "dataset": dataset,
        "features": features,
        "vector_is_dependent": vector_is_dependent,
        "value_query_vector": value_query_vector,
        "mat_file_name": mat_file_name,
        "result_task_dir": result_task_dir,
    }


def get_test_run_pearson_subsetted_data():
    value_query_vector: List[int] = [
        -0.7350800633430481,
        -0.2546066343784332,
        -0.4015739858150482,
        -0.6244646310806274,
        -1.3042032718658447,
        -1.0590176582336426,
        -0.4852583408355713,
    ]
    dataset: ndarray(2) = np.asarray(
        [
            [nan, nan, nan, -0.24296799, -0.30597415, -0.1421945, nan],
            [-0.07660042, 0.03889389, 0.01877249, nan, -0.00152941, nan, 0.02389951],
            [
                0.04580994,
                0.16591634,
                -0.02862956,
                -0.02399221,
                0.03798069,
                -0.25347468,
                -0.07162239,
            ],
            [nan, nan, nan, 0.04940561, 0.15157351, 0.03938945, nan],
            [-0.22337968, 0.1750297, 0.05086419, nan, 0.18998579, nan, 0.27979166],
            [
                0.04659293,
                0.06382449,
                0.07168346,
                nan,
                0.00475106,
                -0.04302818,
                0.01758474,
            ],
            [
                -0.49877502,
                0.01584569,
                0.07573628,
                -0.00636773,
                0.06343152,
                0.17230448,
                0.27169185,
            ],
            [
                0.14214735,
                0.01036974,
                -0.0059761,
                -0.96053906,
                -0.4177283,
                -0.93275739,
                0.06321663,
            ],
            [
                0.33372337,
                0.0873504,
                0.03110079,
                -1.29118325,
                -0.02354171,
                0.02087353,
                0.09964534,
            ],
            [
                -0.1102994,
                0.13333786,
                0.14055485,
                0.07881649,
                0.2700147,
                0.09019929,
                0.06902407,
            ],
            [
                -0.37350929,
                -0.19509528,
                0.03462248,
                -0.4033159,
                -0.9869107,
                -0.2240513,
                -0.00293686,
            ],
        ]
    )

    features: List[Feature] = [
        Feature("TRIL", "slice/RNAi_merged/14/entity_id"),
        Feature("UNC93B1", "slice/RNAi_merged/15/entity_id"),
        Feature("PSG7", "slice/RNAi_merged/10/entity_id"),
        Feature("KDM7A", "slice/RNAi_merged/5/entity_id"),
        Feature("F8A1", "slice/RNAi_merged/3/entity_id"),
        Feature("ANOS1", "slice/RNAi_merged/2/entity_id"),
        Feature("HNF1B", "slice/RNAi_merged/4/entity_id"),
        Feature("SOX10", "slice/RNAi_merged/11/entity_id"),
        Feature("NRAS", "slice/RNAi_merged/9/entity_id"),
        Feature("MAP4K4", "slice/RNAi_merged/6/entity_id"),
        Feature("MED1", "slice/RNAi_merged/7/entity_id"),
    ]

    return {
        "value_query_vector": value_query_vector,
        "features": features,
        "dataset": dataset,
    }


def get_test_local_run_pearson_data():
    value_query_vector: List[int] = [
        -0.39429837465286255,
        -0.23868946731090546,
        -0.15590772032737732,
        0.5417695045471191,
        0.3112448453903198,
        0.32624807953834534,
        0.3909493386745453,
        -0.21967287361621857,
        -0.3824126422405243,
        -1.0152833461761475,
    ]

    dataset: np.ndarray(2) = np.asarray(
        [
            [
                -0.120851449995,
                -0.0763087985242,
                -0.142194504844,
                nan,
                nan,
                nan,
                nan,
                -0.0675722773491,
                -0.242967988165,
                -0.305974145595,
            ],
            [
                -0.029877080841,
                nan,
                nan,
                0.038893892006,
                0.0187724864516,
                -0.0766004238608,
                0.0238995133293,
                nan,
                nan,
                -0.00152940707222,
            ],
            [
                -0.068952412526,
                0.11681189644,
                -0.253474683514,
                0.165916339246,
                -0.0286295577922,
                0.0458099428912,
                -0.071622394291,
                -0.0161102388715,
                -0.0239922103351,
                0.0379806902335,
            ],
            [
                0.0334827413896,
                0.0777900094462,
                0.0393894494634,
                nan,
                nan,
                nan,
                nan,
                0.0769847841644,
                0.0494056145579,
                0.151573512303,
            ],
            [
                0.257911943076,
                nan,
                nan,
                0.175029697136,
                0.0508641949694,
                -0.223379684087,
                0.279791663311,
                nan,
                nan,
                0.189985786867,
            ],
            [
                0.189433529815,
                0.029177660983,
                -0.0430281795682,
                0.0638244856735,
                0.0716834572145,
                0.0465929264297,
                0.0175847352437,
                nan,
                nan,
                0.00475105787852,
            ],
            [
                0.00682686524635,
                0.00410148112137,
                0.172304477864,
                0.0158456896568,
                0.0757362773729,
                -0.498775019465,
                0.271691854127,
                0.0234049735232,
                -0.00636773406166,
                0.0634315203309,
            ],
            [
                -0.233471368381,
                -0.383330245272,
                -0.932757385238,
                0.0103697446563,
                -0.0059761001195,
                0.142147345014,
                0.0632166333383,
                -1.61974475615,
                -0.960539059924,
                -0.41772829773,
            ],
            [
                0.0259594970214,
                0.0149571624789,
                0.020873533561,
                0.0873504017557,
                0.0311007876017,
                0.333723373906,
                0.0996453362927,
                0.0567279091413,
                -1.29118324732,
                -0.0235417073163,
            ],
            [
                0.205230319602,
                -0.013319658361,
                0.0901992919882,
                0.133337856918,
                0.140554853717,
                -0.110299400064,
                0.069024065448,
                0.142145649669,
                0.0788164940851,
                0.270014697373,
            ],
            [
                -0.219619724862,
                -0.427559093793,
                -0.224051300867,
                -0.195095284152,
                0.0346224774174,
                -0.373509286089,
                -0.00293685646367,
                -0.877784101961,
                -0.403315897196,
                -0.986910695853,
            ],
        ]
    )

    features: List[Feature] = [
        Feature("TRIL", "slice/RNAi_merged/14/entity_id"),
        Feature("UNC93B1", "slice/RNAi_merged/15/entity_id"),
        Feature("PSG7", "slice/RNAi_merged/10/entity_id"),
        Feature("KDM7A", "slice/RNAi_merged/5/entity_id"),
        Feature("F8A1", "slice/RNAi_merged/3/entity_id"),
        Feature("ANOS1", "slice/RNAi_merged/2/entity_id"),
        Feature("HNF1B", "slice/RNAi_merged/4/entity_id"),
        Feature("SOX10", "slice/RNAi_merged/11/entity_id"),
        Feature("NRAS", "slice/RNAi_merged/9/entity_id"),
        Feature("MAP4K4", "slice/RNAi_merged/6/entity_id"),
        Feature("MED1", "slice/RNAi_merged/7/entity_id"),
    ]

    return {
        "value_query_vector": value_query_vector,
        "features": features,
        "dataset": dataset,
    }
