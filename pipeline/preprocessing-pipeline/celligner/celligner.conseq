add-if-missing {
    "type": "celligner-preprocess",
    "category": "expression",
    "label": "TCGA",
    "source_dataset_id": "celligner-input-9827.1/tumor_expression"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "annotation",
    "label": "TCGA",
    "source_dataset_id": "celligner-input-9827.7/tumor_annotations"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "expression",
    "label": "MET500",
    "source_dataset_id": "met500-fc3c.2/met500_TPM"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "annotation",
    "label": "MET500",
    "source_dataset_id": "met500-fc3c.3/met500_ann"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "expression",
    "label": "Nov_PDX",
    "source_dataset_id": "pdx-data-3d29.2/Novartis_PDX_TPM"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "annotation",
    "label": "Nov_PDX",
    "source_dataset_id": "pdx-data-3d29.2/Novartis_PDX_ann"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "expression",
    "label": "Ped_PDX",
    "source_dataset_id": "pdx-data-3d29.2/pediatric_PDX_TPM"
}

add-if-missing {
    "type": "celligner-preprocess",
    "category": "annotation",
    "label": "Ped_PDX",
    "source_dataset_id": "pdx-data-3d29.2/pediatric_PDX_ann"
}

rule process_celligner_inputs:
    executor: dsub {
       "docker_image": "us-central1-docker.pkg.dev/depmap-consortium/depmap-docker-images/celligner@sha256:890ca0afafea6fd7e40c79b7aef773b81dcf5919a5dee2d7eb63905990c55cbd",
       "min_ram": "100",
       "boot_disk_size": "70", 
       "helper_path": "/opt/conseq/bin/conseq-helper" }
    inputs:
        depmap_expr = {"type": "raw-expr-matrix-profile", "category": "expression"},
        depmap_ann = {"type": "biomarker-matrix", "category": "context"},
        depmap_prof_map = {"type": "profile-map", "category": "mapping"},
        depmap_model_cond = {"type": "model-condition", "category": "mapping"},
        tcga_expr = {"type": "celligner-preprocess", "category": "expression", "label": "TCGA"},
        tcga_ann = {"type": "celligner-preprocess", "category": "annotation", "label": "TCGA"},
        met500_expr = {"type": "celligner-preprocess", "category": "expression", "label": "MET500"},
        met500_ann = {"type": "celligner-preprocess", "category": "annotation", "label": "MET500"},
        nov_pdx_expr = {"type": "celligner-preprocess", "category": "expression", "label": "Nov_PDX"},
        nov_pdx_ann = {"type": "celligner-preprocess", "category": "annotation", "label": "Nov_PDX"},
        ped_pdx_expr = {"type": "celligner-preprocess", "category": "expression", "label": "Ped_PDX"},
        ped_pdx_ann = {"type": "celligner-preprocess", "category": "annotation", "label": "Ped_PDX"},
        taiga_token={"type": "config-file", "name": "taiga-token"},
        celligner_script = fileref("scripts/run_celligner.py")
    outputs:
        {
            "type": "annotated-celligner-output",
            "label": "placeholder",
            "alignment": {"$filename": "celligner_output.csv"},
            "distances": {"$filename": "tumor_CL_dist.csv"},
            "pcs": {"$filename": "celligner_pcs.csv"},
            "corrected_expr": {"$filename": "corrected_expression.csv"}
        }
    run "echo test" # this is here because it seems like changing the dsub parameters didn't force a re-run
    run "cp {{ inputs.taiga_token.filename }} ./.taiga-token"
    run "cp {{ inputs.celligner_script.filename }} ./run_celligner.py"
    run "cp -r /var/env/script/celligner ./"
    run "python3" with """
        import json 
        with open('inputs.json', "wt") as fd:
            inputs = {{inputs}}
            print(inputs)
            fd.write(json.dumps(inputs, indent=2))
        """
    run "cat inputs.json"
    run "python3 run_celligner.py --input inputs.json"
