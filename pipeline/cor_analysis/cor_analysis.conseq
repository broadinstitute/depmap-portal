
rule create_cor_analysis_pairs:
    inputs:
        a_set=all {'type': 'cor-analysis-a'},
        b_set=all {'type': 'cor-analysis-b'},
        script=fileref("create_cor_analysis_pairs.py")
    
    run "bash" with """
        cat > inputs.json <<EOF
        {{inputs|quoted}}
        EOF
        """
    run "python3 {{inputs.script.filename}} inputs.json results.json"

rule run_cor_analysis_pair:
    inputs:
        pair={'type': 'cor_input_pair'},
        script=fileref("correlation_with_qvalue.py")    
    outputs:
        {
            "type": "cor_table", 
            "a_given_id": "{{inputs.pair.a_given_id}}",
            "b_given_id": "{{inputs.pair.b_given_id}}", 
            "a_taiga_id": "{{inputs.pair.a_taiga_id}}",
            "b_taiga_id": "{{inputs.pair.b_taiga_id}}",
            "a_feature_id_format": "{{inputs.pair.a_feature_id_format}}",
                "a_features_taiga_id": "{{inputs.pair.a_features_taiga_id|default('')}}",
            "a_compounds_taiga_id": "{{inputs.pair.a_compounds_taiga_id|default('')}}",
            "b_feature_id_format": "{{inputs.pair.b_feature_id_format}}",
            "b_features_taiga_id": "{{inputs.pair.b_features_taiga_id|default('')}}",
            "b_compounds_taiga_id": "{{inputs.pair.b_compounds_taiga_id|default('')}}",
            "filename": {"$filename": "{{inputs.pair.a_given_id}}.{{inputs.pair.b_given_id}}.cor" }
        }
    run "bash" with """
        cat > inputs.json <<EOF
        {{inputs.pair|quoted}}
        EOF
        """
    run "python3 {{inputs.script.filename}} inputs.json {{inputs.pair.a_given_id}}.{{inputs.pair.b_given_id}}.cor"

#let publish_dest = "gs://preprocessing-pipeline-outputs/depmap-pipeline/pgm-test"
#let S3_STAGING_URL = "gs://preprocessing-pipeline-outputs/depmap-pipeline/pgm-test/staging"
#rule publish_cor_tables:
#    inputs: cor_tables=all {"type": "cor_table"}
#    publish: "{{config.publish_dest}}/cor_tables.json"
