rule transform_genetic_derangement:
    inputs:
        cngene_log2={"type": "cngene_log2"},
        gene={"type": "gene"},
        script=fileref('../scripts/predictability/transform_genetic_derangement.py'),
    outputs:
        {
            "type": "predictability_genetic_derangement",
            "filename": {"$filename": "genetic_derangement.csv"},
        }
    run "python3 {{inputs.script.filename}} {{inputs.cngene_log2.filename}} {{inputs.gene.filename}} genetic_derangement.csv"


rule transform_driver_events:
    inputs:
        mutations={"type": "mutations"},
        oncokb_annotated={"type": "oncokb_annotated"},
        script=fileref('../scripts/predictability/transform_driver_events.py'),
        update_taiga_script=fileref('upload_to_taiga.py')
    outputs:
        {
            "type": "predictability_driver_events",
            "filename": {"$filename": "driver_events.csv"},
        }
    run "python3 {{inputs.script.filename}} {{inputs.mutations.dataset_id}} {{inputs.oncokb_annotated.dataset_id}} driver_events.csv"


rule transform_fusion:
    inputs:
        fusion={"type": "fusion"},
        gene={"type": "gene"},
        script=fileref('../scripts/predictability/transform_fusion.py'),
    outputs:
        {
            "type": "predictability_fusion",
            "filename": {"$filename": "fusion.csv"},
        }
    run "python3 {{inputs.script.filename}} {{inputs.fusion.dataset_id}} {{inputs.gene.filename}} fusion.csv"


rule transform_lineage:
    inputs:
        model={"type": "model"},
        script=fileref('../scripts/predictability/transform_lineage.py'),
    outputs:
        {
            "type": "predictability_lineage",
            "filename": {"$filename": "lineage.csv"},
        }
    run "python3 {{inputs.script.filename}} {{inputs.model.dataset_id}} lineage.csv"


rule transform_crispr_confounders:
    inputs:
        model={"type": "model"},
        achilles_screen_qc_report={"type": "achilles_screen_qc_report"},
        crispr_screen_map={"type": "crispr_screen_map"},
        script=fileref('../scripts/predictability/transform_crispr_confounders.py'),
    outputs:
        {
            "type": "predictability_crispr_confounders",
            "filename": {"$filename": "crispr_confounders.csv"},
        }
    run "python3 {{inputs.script.filename}} {{inputs.model.dataset_id}} {{inputs.achilles_screen_qc_report.dataset_id}} {{inputs.crispr_screen_map.dataset_id}} crispr_confounders.csv"
